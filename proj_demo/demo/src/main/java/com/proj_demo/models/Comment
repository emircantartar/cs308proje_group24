package com.proj_demo.models;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.Objects;

@Entity
@Table(name = "comments")
public class Comment {
    // Primary key for the comment
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    // Many-to-one relationship with user
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    // Many-to-one relationship with product
    @ManyToOne
    @JoinColumn(name = "product_id", nullable = false)
    private Product product;

    // The content of the comment
    @Column(length = 1000, nullable = false)
    private String content;

    // Rating given by the user (1–5)
    @Column(nullable = false)
    private int rating;

    // Whether the comment is approved for display
    @Column(nullable = false)
    private boolean approved;

    // Timestamp of when the comment was created
    @Column(nullable = false)
    private LocalDateTime createdAt;

    // Default constructor (required for JPA)
    public Comment() {
    }

    // Parameterized constructor
    public Comment(User user, Product product, String content, int rating) {
        this.user = user;
        this.product = product;
        this.content = content;
        this.rating = rating;
        this.approved = false; // Default: comment requires approval
        this.createdAt = LocalDateTime.now(); // Set the current time as creation time
    }

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public Product getProduct() {
        return product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public int getRating() {
        return rating;
    }

    public void setRating(int rating) {
        if (rating < 1 || rating > 5) { // Adjust range if 1–10 is required
            throw new IllegalArgumentException("Rating must be between 1 and 5.");
        }
        this.rating = rating;
    }

    public boolean isApproved() {
        return approved;
    }

    public void setApproved(boolean approved) {
        this.approved = approved;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    // Business Logic Methods

    /**
     * Approves the comment for visibility.
     */
    public void approve() {
        this.approved = true;
    }

    /**
     * Rejects the comment, making it invisible.
     */
    public void reject() {
        this.approved = false;
    }

    // Overridden Methods

    @Override
    public String toString() {
        return "Comment{" +
                "id=" + id +
                ", user=" + user.getName() +
                ", product=" + product.getName() +
                ", rating=" + rating +
                ", approved=" + approved +
                ", createdAt=" + createdAt +
                ", content='" + content + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Comment comment = (Comment) o;
        return id == comment.id &&
               Objects.equals(user, comment.user) &&
               Objects.equals(product, comment.product) &&
               Objects.equals(content, comment.content);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, user, product, content);
    }
}
package com.proj_demo.services;

import com.proj_demo.models.User;
import com.proj_demo.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import com.proj_demo.utils.SecurityUtils;

@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private BCryptPasswordEncoder passwordEncoder;

    // Register a new user
    public boolean registerUser(User user) {
        // Check if email already exists
        if (userRepository.findByEmail(user.getEmail()).isPresent()) {
            return false; // Email is already registered
        }

        // Hash the password before saving
        user.setPassword(passwordEncoder.encode(user.getPassword()));
        userRepository.save(user);
        return true;
    }

    // Login a user
    public boolean loginUser(String email, String password) {
        User user = userRepository.findByEmail(email).orElse(null);
        if (user == null) {
            return false; // User not found
        }

        // Check if the password matches
        return passwordEncoder.matches(password, user.getPassword());
    }

    // Get user profile by ID
    public User getUserById(int userId) {
        return userRepository.findById(userId).orElse(null);
    }


    public void registerUser(User user) {
        user.setPassword(SecurityUtils.hashPassword(user.getPassword()));
        userRepository.save(user);
    }

    public boolean loginUser(String email, String plainPassword) {
        User user = userRepository.findByEmail(email).orElse(null);
        if (user != null) {
            return SecurityUtils.verifyPassword(plainPassword, user.getPassword());
        }
        return false;
    }
}
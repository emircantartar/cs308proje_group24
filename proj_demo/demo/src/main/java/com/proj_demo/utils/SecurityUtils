package com.proj_demo.utils;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import java.security.SecureRandom;
import java.util.Base64;

public class SecurityUtils {

    private static final BCryptPasswordEncoder PASSWORD_ENCODER = new BCryptPasswordEncoder();

    /**
     * Hashes a plaintext password using BCrypt.
     *
     * @param plainPassword The plaintext password.
     * @return The hashed password.
     */
    public static String hashPassword(String plainPassword) {
        return PASSWORD_ENCODER.encode(plainPassword);
    }

    /**
     * Verifies a plaintext password against a hashed password.
     *
     * @param plainPassword The plaintext password.
     * @param hashedPassword The hashed password.
     * @return True if the password matches; otherwise, false.
     */
    public static boolean verifyPassword(String plainPassword, String hashedPassword) {
        return PASSWORD_ENCODER.matches(plainPassword, hashedPassword);
    }

    /**
     * Generates a secure random token for authentication or other purposes.
     *
     * @param length The length of the token.
     * @return A base64-encoded secure token.
     */
    public static String generateSecureToken(int length) {
        SecureRandom secureRandom = new SecureRandom();
        byte[] tokenBytes = new byte[length];
        secureRandom.nextBytes(tokenBytes);
        return Base64.getUrlEncoder().withoutPadding().encodeToString(tokenBytes);
    }
}